name: CI

# 🔁 Срабатывает при пуше в ветки dev и main
on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

env: # 🌍 Общие переменные окружения (если понадобятся)
  NODE_VERSION: 22

jobs:
  setup:
    name: 📦 Install
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout репозитория
        uses: actions/checkout@v4

      - name: 🔧 Enable Corepack
        run: corepack enable

      - name: ⚙️ Use project Yarn version
        run: corepack prepare yarn@4.7.0 --activate

      - name: ⚙️ Установка Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'yarn'

      - name: 📦 Установка зависимостей
        run: yarn install --immutable


      - name: 📦 Сохранение проекта как артефакт
        uses: actions/upload-artifact@v4
        with:
          name: project-source
          path: |
            ./
            .yarn/**
            .yarnrc.yml
          retention-days: 1

  lint:
    name: ✏️ Lint apps
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: 🔧 Enable Corepack
        run: corepack enable

      - name: ⚙️ Use project Yarn version
        run: corepack prepare yarn@4.7.0 --activate

      - name: 📦 Восстановление проекта
        uses: actions/download-artifact@v4
        with:
          name: project-source
          path: .

      - name: ✏️ Eslint
        run: yarn lint

  build:
    name: 🛠️ Build apps
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: 🔧 Enable Corepack
        run: corepack enable

      - name: ⚙️ Use project Yarn version
        run: corepack prepare yarn@4.7.0 --activate

      - name: 📦 Восстановление проекта
        uses: actions/download-artifact@v4
        with:
          name: project-source
          path: .

      - name: 📦 Установка зависимостей
        run: yarn install --immutable

      - name: 🛠️ Сборка
        run: yarn run build

  deploy:
    if: github.ref == 'refs/heads/main' # 🚀 Только при пуше в main
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    environment:
      name: production

    steps:
      - name: 🔧 Enable Corepack
        run: corepack enable

      - name: ⚙️ Use project Yarn version
        run: corepack prepare yarn@4.7.0 --activate

      - name: 📦Восстановление проекта
        uses: actions/download-artifact@v4
        with:
          name: product-source
          path: .

      - name: 🚀 Deploy (заглушка)
        run: echo "🎯 Добавь сюда команду деплоя, например, SSH, Docker, rsync и т.д."

      # Пример: если понадобятся переменные окружения из GitHub Secrets
      # - name: 🔐 Set env vars
      #   run: echo "API_URL=${{ secrets.API_URL }}" >> $GITHUB_ENV